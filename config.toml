# 使用 自定义发布版本
# https://github.com/erasin/helix

theme = "onedark_local"

[editor]
# 真彩支持
# tty export COLORTERM=truecolor
true-color = true
undercurl = true
auto-completion = true
# auto-save = false
auto-info = true
# cursorcolumn = true # 光标列高亮
cursorline = true  # 光标 行高亮
color-modes = true
idle-timeout = 40
# mouse = true
# scrolloff = 5 # 滚动时上下边缘填充行数
# scroll-lines = 3
line-number = "relative" # 行号类型 absolute / relative 
end-of-line-diagnostics = "hint" # 关联 editor.inline-diagnostics
# rulers = [81, 121]   # 标尺
# text-width = 80  # reflow 自动分割换行, 支持软换行
# popup-border = "all"
# bufferline = "multiple"  # always | multiple | nerver

# [branch:commandline] commandline hide
commandline = false

rainbow-brackets = true #[#13530] 彩色括号

# [editor.gutters]
# layout = ["diagnostics", "spacer", "line-numbers", "spacer", "diff"]

# [Inline Git Blame #13133]
[editor.inline-blame]
show = "cursor-line"
auto-fetch = true

[editor.soft-wrap]
enable = true
# max-wrap = 20 
# max-indent-retain = 40
# wrap-indicator = "↪ "
# wrap-at-text-width = true # zen-mode center View.inner_area

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.lsp]
display-messages = true
display-progress-messages = true
display-inlay-hints = true
# inlay-hints-length-limit = 40

# [#6417] inline diagnostic
[editor.inline-diagnostics]
cursor-line = "hint"
# DiagnosticFilter : disable, hint, info, waring, error

# all / none
[editor.whitespace.render]
# space = "all"
tab = "all"
# newline = "all"

[editor.indent-guides]
render = true
character = "╎" # Some characters that work well: "▏", "╎", "┆", "┊"
skip-levels = 0

# 状态栏定义
[editor.statusline]
left = [
  "mode",
  "version-control",
  "read-only-indicator",
  "file-name",
  "file-modification-indicator",
]
# center = ["diagnostics", "workspace-diagnostics"]
center = ["diagnostics"]
right = [
  "register",
  "position",
  "primary-selection-length",
  "selections",
  'word-count', # [branch:statusline-word-count]
  "file-encoding",
  "file-indent-style",
  "file-line-ending",
  "position-percentage",
  "file-type",
  "spacer"
]
separator = "│"

mode.normal = " "
mode.insert = " "
mode.select = " "

diagnostics = ["warning", "error"]
workspace-diagnostics = ["warning", "error"]

# [#5768]
# space e 显示
[editor.explorer]
position = "left"
column-width = 22

# [#6118]
# [editor.sticky-context]
# enable = true
# # indicator = true
# max-lines = 10

# [#12369] icons v2
[icons.vcs]
enabled = true

[icons.kind]
enabled = true
number = ""
string = ""
function = "󰊕"
color = "󰌁"

[icons.mime]
enabled = true
php = { glyph = "", color = "#1976D2" }
godot = { glyph = "", color = "#2196F3" }
gd = { glyph = "", color = "#2196F3" }
gdshader = { glyph = "󰘷", color = "#9C27B0" }
wgsl = { glyph = "", color = "#9C27B0" }
cj = ""
yml = ""
yaml = ""
conf= ""
kdl= ""
Makefile = ""
ron = "󰔘"
db = ""
sql = "󰆼"
jsonc = ""
json5 = ""
"ignore" = "󰈉"
".ignore" = "󰈉"
"lrc" = "󰨖"
"env" = ""
"hurl" = { glyph = "", color = "#DE3163" }


[icons.diagnostic]
error = " " 
warning = " "
info = ""
hint = "󰮥 "

[keys.normal]
# W = "@miw"
# smart tab
tab = "move_parent_node_end"
S-tab = "move_parent_node_start"

"\\" = ":reflow" # |
"X" = "extend_line_above"

"C-s" = ":write"
"C-j" = "save_selection"
"A-/" = "toggle_comments"

"Z" = { "Z" = [":quit"] }
"z" = { "o" = [":toggle soft-wrap.wrap-at-text-width"] }

# 输入法切换
"esc" = ["normal_mode", ":pipe-to bash ~/.config/helix/scripts/ime-switch"]
# 插入模式，恢复输入法
i = ["insert_mode", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1"]
I = ["insert_at_line_start", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1" ]
# a = "@li" or remap `after insert`
a = ["move_char_right", "insert_mode", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1" ]
A = ["insert_at_line_end", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1"]
o = ["open_below", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1"]
O = ["open_above", ":pipe-to bash ~/.config/helix/scripts/ime-switch 1"]

# space mode
[keys.normal.space]
"x" = ":buffer-close"
"w" = { r = ":reload", c = ":config-reload" }
"." = "file_picker_in_current_buffer_directory"
"n" = "signature_help"

# 打开 yazi 文件浏览器
[keys.normal.space.o]
# yazi 文件 picker
"e" = ":open %sh{ ~/.config/helix/scripts/yazi-picker.sh }"
# scooter 搜索
"s" = ":sh bash ~/.config/helix/scripts/scooter-picker.sh"

# BUG:  
# https://github.com/sxyazi/yazi/pull/2461
# e = [
#   ':sh rm -f /tmp/yazi-file',
#   ':insert-output yazi %{buffer_name} --chooser-file=/tmp/yazi-file',
#   ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
#   ':open %sh{cat /tmp/yazi-file}',
#   ':redraw',
# ]
# 全局搜索
# https://github.com/thomasschafer/scooter?tab=readme-ov-file#helix
# s = [
#     # ":write-all",
#     ":insert-output scooter >/dev/tty",
#     ":redraw",
#     ":reload-all"
# ]

[keys.insert]
# smart tab
S-tab = "move_parent_node_start"
"esc" = ["normal_mode", ":pipe-to bash ~/.config/helix/scripts/ime-switch"]

# tab 默认为 "tab" = smart_tab
# tab 输入 \t 为 "S-tab" = insert_tab

# Return/Enter keep insert at center with zen mode
# 保持插入模式下书写的时候保持在屏幕中间, 可以设定在项目中 for markdown
# "ret" = ["insert_newline", 'align_view_center']

[keys.select]
tab = "extend_parent_node_end"
S-tab = "extend_parent_node_start"
