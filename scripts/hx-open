#!/bin/bash

# tmux
# 参数：
# -v : 竖直拆分 (可选)
# -p : 项目路径 {project}
# 文件: 要打开的文件路径（支持行号和列号）{file}:{line}:{col}
# 检查 tmux 当前窗口是否有 helix(hx) 编辑器执行，并且项目路径相同，
# 如果项目路径相同则发送命令 `:o $file`，
# 如果项目路径不同则新建窗口，然后发送命令 `hx -w $project $file`

vertical=false
project_path=""
file_arg=""

# 解析参数
while getopts "vp:" opt; do
  case $opt in
    v) vertical=true ;;
    p) project_path="$OPTARG" ;;
    *) echo "用法: $0 [-v] -p 项目路径 文件路径[:行号[:列号]]" >&2
       exit 1 ;;
  esac
done
shift $((OPTIND - 1))

[ $# -eq 0 ] && { echo "错误：必须提供文件路径" >&2; exit 1; }
file_arg="$1"

# 解析文件路径和行列号
IFS=':' read -r file line col <<< "$file_arg"
file_spec="$file"
[ -n "$line" ] && file_spec="$file_spec:$line"
[ -n "$col" ] && file_spec="$file_spec:$col"

# 检查 tmux 会话
# if [ -z "$TMUX" ]; then
#   echo "错误：必须在 tmux 会话中运行" >&2
#   exit 1
# fi

# 验证项目路径
project_path=$(realpath "$project_path")
[ ! -d "$project_path" ] && { echo "错误：无效项目路径 '$project_path'" >&2; exit 1; }

echo $project_path

# 查找匹配的 helix pane
find_hx_pane() {
  tmux list-panes -F "#{pane_id} #{pane_current_command} #{pane_current_path}" | \
    awk -v project="$project_path" \
    '$2 == "hx" && $3 == project {print $1; exit}'
}

target_pane=$(find_hx_pane)

# 执行逻辑
if [ -n "$target_pane" ]; then
  # 向现有 hx 实例发送打开命令
  tmux send -t "$target_pane" ":o $file_spec" Enter
else
  # 检查当前窗口是否有相同项目路径的 pane
  same_project=$(tmux list-panes -F "#{pane_current_path}" | \
    while read path; do
      [ "$(realpath "$path")" = "$project_path" ] && { echo 1; break; }
    done)

  # 根据情况创建新 pane 或窗口
  if [ -n "$same_project" ]; then
    # 在当前窗口拆分
    split_direction="-h"
    $vertical && split_direction="-v"
    tmux split-window $split_direction -c "$project_path" hx -w "$project_path" "$file_spec"
  else
    # 创建新窗口
    tmux new-window -c "$project_path" hx -w "$project_path" "$file_spec"

  fi

  # 聚焦到新创建的 pane/窗口
  tmux select-pane -l 2>/dev/null || tmux select-window -t :-
fi
