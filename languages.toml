[[language]]
name = "bash"
file-types = [
  "sh",
  "bash",
  "zsh",
  ".bash_login",
  ".bash_logout",
  ".bash_profile",
  ".bashrc",
  ".profile",
  ".zshenv",
  ".zlogin",
  ".zlogout",
  ".zprofile",
  ".zshrc",
  ".bash_alias",
  ".bash_path",
  "host",
]

[[language]]
name = "typescript"

[language.config]
hostInfo = "helix"
locale = "zh-CN"

[language.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[[language]]
name = "tsx"

[language.config]
hostInfo = "helix"
locale = "zh-CN"

[language.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[[language]]
name = "javascript"

[language.config]
hostInfo = "helix"
locale = "zh-CN"

[language.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[[language]]
name = "jsx"

[language.config]
hostInfo = "helix"
locale = "zh-CN"

[language.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[[language]]
name = "css"
file-types = ["css", "scss", "less"]

[[language]]
name = "php"

[language.config]
licenceKey = "/Users/erasin/.config/php/intelephenser_licence.txt"
# storagePath = "" # os.tmpdir()
# globalStoragePath = "" # os.homedir()
# clearCache = false # clean state

[[language]]
name = "python"
file-types = ["py", "pyi"]
roots = ["pyproject.toml", "pyrightconfig.json"]
language-server = { command = "pyright-langserver", args = ["--stdio"] }

[language.config.pyright.inlayHints]
functionReturnTypes = true
variableTypes = true

[language.config.analysis]
autoSearchPaths = true
diagnosticMode = "workspace"
useLibraryCodeForTypes = true

[[language]]
name = "gdscript"
language-server = { command = "nc", args = [
  "127.0.0.1",
  "6005",
], language-id = "gdscript" } # 通过 nc 转发

[language.config]
locale = "zh_CN"

[[language]]
name = "xml"
file-types = ["xml", "mobileconfig", "plist", "xib", "storyboard", "svg", "ncx", "opf"]

[[language]]
name = "html"
file-types = ["html", "xhtml"]


[[language]]
name = "glsl"
file-types = [
  "glsl",
  "vert",
  "tesc",
  "tese",
  "geom",
  "frag",
  "comp",
  "shader",
  "gdshader",
  "gdshaderinc",
]
roots = ['.git']
language-server = { command = "glslls", args = ["--stdin"] }
config = { single_file_support = true }

[[grammar]]
name = "svelte"
source = { git = "https://github.com/Himujjal/tree-sitter-svelte", rev = "52e122ae68b316d3aa960a0a422d3645ba717f42" }

# dev
[[language]]
name = "markdown"
indent = { tab-width = 4, unit = "    " }
file-types = ["md", "markdown"]
roots = [".git"]
language-server = { command = "marksman", args = ["server"] }
# config = { ltex.disabledRules = { "en-US" = [ "PROFANITY", ], "en-GB" = [ "PROFANITY", ] }, ltex.dictionary = { "en-US" = [ "builtin", ], "en-GB" = [ "builtin", ] } }

# zen mode like
# https://github.com/helix-editor/helix/discussions/6468
# text-width = 80
# soft-wrap = { enable = true, wrap-at-text-width = true }

# [[language]]
# name = "latex"
# text-width = 80
# soft-wrap = { enable = true, wrap-at-text-width = true }

[[language]]
name = "plantuml"
scope = "source.puml"
injection-regex = "plantuml"
file-types = ["puml", "pu", "wsd"]
roots = []
comment-token = "'"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "plantuml"
source = { path = "/Users/erasin/Development/project/tree-sitter-plantuml", rev = "" }

[[language]]
name = "dart"

[language.config.dart]
# dart lsp 自定义函数，暂不支持
closingLabels = true
outline = true
flutterOutline = true

[[language]]
name = "v"
file-types = ["v", "vv", "vsh"]
# language-server = { command = "", args = [] }

[[language]]
name = "env"
file-types = [".env", ".env.local", ".env.development", ".env.production", ".env.dist", ".envrc","env"]

[[language]]
name = "http"
scope = "source.http"
injection-regex = "http"
file-types = ["http"]
roots = []
comment-token = "#"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "http"
source = { git = "https://github.com/erasin/tree-sitter-http", rev = "3dc1385ab2d4ce97eb583ced6e962fff8f407830" }


[[language]]
name = "hurl"
scope = "source.hurl"
injection-regex = "hurl"
file-types = ["hurl"]
roots = []
comment-token = "#"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "hurl"
source = { git = "https://github.com/pfeiferj/tree-sitter-hurl", rev = "264c42064b61ee21abe88d0061f29a0523352e22" }


# [[language]]
# name = "puppet"
# scope = "source.pp"
# injection-regex = "puppet"
# file-types = ["pp"]
# roots = []
# indent = { tab-width = 2, unit = "  " }
# comment-token = "#"

# [[grammar]]
# name = "puppet"
# source = { git = "https://github.com/neovim-puppet/tree-sitter-puppet", rev = "bdedf4d5b13b4020745a678364e2f441cd3abf2a" }


# [[language]]
# name = "typst"
# scope = "source.typ"
# injection-regex = "typst"
# file-types = ["typ"]
# roots = []
# comment-token = "//"
# indent = { tab-width = 2, unit = "  " }

# [[grammar]]
# name = "typst"
# source = { git = "https://github.com/SeniorMars/tree-sitter-typst", rev = "f73626cbabcfb0ff273967b3792740e7478a06c8" }
