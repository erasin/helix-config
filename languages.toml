# ==================== LSP ========================

[language-server.typescript-language-server.config]
hostInfo = "helix"
locale = "zh-CN"

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

# php
[language-server.intelephense.config]
licenceKey = "/home/erasin/.config/php/intelephenser_licence.txt"
storagePath = "/home/erasin/.config/php/" # os.tmpdir()
globalStoragePath = "/home/erasin/.config/php/" # os.homedir()
# clearCache = false # clean state

[language-server.pyright]
command = "pyright-langserver"
args =["--stdio"] 

[language-server.pyright.config.pyright.inlayHints]
functionReturnTypes = true
variableTypes = true

[language-server.pyright.config.python.analysis]
autoSearchPaths = true
diagnosticMode = "workspace"
useLibraryCodeForTypes = true

[language-server.pylsp.config]
pylsp.plugins.rope_autoimport.enabled = true

[language-server.godot]
command = "nc" 
args = [ "127.0.0.1", "6005"]

[language-server.dart.config.dart]
# dart lsp 自定义函数，暂不支持
closingLabels = true
outline = true
flutterOutline = true


[language-server.lua-language-server.config.Lua.workspace]
library = [
  "${3rd}/love2d/library",
  "${3rd}/busted/library",
  "/usr/local/Cellar/neovim/0.8.3/share/nvim/runtime/lua"
]
[language-server-lua-language-server.config.Lua.diagnostics]
globals = ["vim"]

[language-server.lua-language-server.config.Lua.hint]
enable = true
arrayIndex = "Enable"
setType = true
paramName = "All"
paramType = true
await = true


[language-server.typst-lsp] 
command = "typst-lsp" 

# ================= LANG =====================


[[language]]
name = "git-commit"
soft-wrap = { enable = true, wrap-at-text-width = true }


[[language]]
name = "bash"
file-types = [
  "sh",
  "bash",
  "zsh",
  ".bash_login",
  ".bash_logout",
  ".bash_profile",
  ".bashrc",
  ".profile",
  ".zshenv",
  ".zlogin",
  ".zlogout",
  ".zprofile",
  ".zshrc",
  ".bash_alias",
  ".bash_path",
  "host",
]

[[language]]
name = "css"
file-types = ["css", "scss", "less"]

[[language]]
name = "python"
file-types = ["py", "pyi"]
roots = ["pyproject.toml", "pyrightconfig.json"]
# language-servers = ["pyright"]
formatter = { command = "black", args = ["-"] }
auto-format = true


[[language]]
name = "gdscript"
language-servers = ["godot"] 


[[language]]
name = "godot-resource"
scope = "source.tscn"
file-types = ["tscn", "tres", "godot", "gdextension", "import"]
language-servers = ["godot"] 

# [language.debugger]
# name ="gdscript"
# https://ask.godotengine.org/122563/how-to-get-the-godot-lsp-to-work-with-nvim-lsp


[[language]]
name = "xml"
file-types = ["xml", "mobileconfig", "plist", "xib", "storyboard", "svg", "ncx", "opf", "iml"]

[[language]]
name = "html"
file-types = ["html", "xhtml"]


[[language]]
name = "glsl"
file-types = [
  "glsl",
  "vert",
  "tesc",
  "tese",
  "geom",
  "frag",
  "comp",
  "shader",
  "gdshader",
  "gdshaderinc",
]
roots = ['.git']
# language-server = { command = "glslls", args = ["--stdin"] }
# config = { single_file_support = true }

[[grammar]]
name = "svelte"
source = { git = "https://github.com/Himujjal/tree-sitter-svelte", rev = "52e122ae68b316d3aa960a0a422d3645ba717f42" }

# dev
[[language]]
name = "markdown"
indent = { tab-width = 4, unit = "    " }
file-types = ["md", "markdown"]
roots = [".git"]
# 设定zen-mode-like
# text-width = 80
# soft-wrap = { enable = true, wrap-at-text-width = true }

# [[language]]
# name = "latex"
# text-width = 80
# soft-wrap = { enable = true, wrap-at-text-width = true }

[[language]]
name = "plantuml"
scope = "source.puml"
injection-regex = "plantuml"
file-types = ["puml", "pu", "wsd"]
roots = []
comment-token = "'"
indent = { tab-width = 2, unit = "  " }

# [[grammar]]
# name = "plantuml"
# source = { path = "/Users/erasin/Development/project/tree-sitter-plantuml", rev = "" }


[[language]]
name = "v"
file-types = ["v", "vv", "vsh"]

[[language]]
name = "env"
file-types = [".env", ".env.local", ".env.development", ".env.production", ".env.dist", ".envrc","env"]

# [[language]]
# name = "http"
# scope = "source.http"
# injection-regex = "http"
# file-types = ["http"]
# roots = []
# comment-token = "#"
# indent = { tab-width = 2, unit = "  " }

# [[grammar]]
# name = "http"
# source = { git = "https://github.com/erasin/tree-sitter-http", rev = "3dc1385ab2d4ce97eb583ced6e962fff8f407830" }

[[language]]
name = "typst"
scope = "source.typ"
injection-regex = "^typ(st)?$"
file-types = ["typ"]
roots = []
comment-token = "//"
indent = { tab-width = 2, unit = "  " }
language-servers = ["typst-lsp"]

[[grammar]]
name = "typst"
# source = { git = "https://github.com/frozolotl/tree-sitter-typst", rev = "68f60ff8941474f22fe7dc725af846f5c20a5b06" }
# source = { git = "https://github.com/SeniorMars/tree-sitter-typst", rev = "2e66ef4b798a26f0b82144143711f3f7a9e8ea35" }
source = { git = "https://github.com/TheOnlyMrCat/tree-sitter-typst", rev = "dfc0efc184e59e3fad7c9da8e461688ddeecc954" }




# [[grammar]]
# name = "slint"
# source = { git = "https://github.com/slint-ui/slint", rev = "671d22d762fd1031c554251bf8b3c917eab4c311", subpath="editors/tree-sitter-slint" }
