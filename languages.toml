# [use-grammars] 
# only = [ 
# "rust", "c", 
# "go", "gomod", "gowork", "gotmpl", 
# "python", "bash", "lua", "scheme", "sql", 
# "php", "php-only",
# "html", "css", "scss", "javascript", "jsdoc", "typescript", "jsx", "vue", "svelte", 
# "json", "jsonc", "json5", "toml", "yaml", "xml", "ini", "kdl", "ron", 
# "gdscript", "godot-resource", "glsl", "wgsl", 
# "git-config", "git-commit", "git-ignore", "git-rebase", "git-attributes","sshclientconfig", 
# "hosts","env", "make",
# "comment", "diff", "regex",
# "latex", "typst","markdown", "markdown.inline", "task", "todotxt", 
# "log", "glicol", 
# "dot", "hurl", "po", "mail", "pest", "beancount",  "slint",
# ]

# ----- rust ----
# [language-server.rust-analyzer.config]
# cargo.features = "all"
# checkOnSave.features = "all"

# ------ snippets lsp -----
# https://github.com/erasin/hx-lsp 
# ./snippets
[language-server.hx-lsp]
command = "hx-lsp"

# ------ typos lsp ------
# https://github.com/tekumara/typos-lsp
# https://github.com/crate-ci/typos
# Add typos.toml enable
[language-server.typos-lsp]
command = "typos-lsp"
config.diagnosticSeverity = "Warning"

# ---------- rust -----
[[language]]
name = "rust"
language-servers = ["rust-analyzer", "hx-lsp", "typos-lsp"]

[[language]]
name = "go"
language-servers = ["gopls", "golangci-lint-lsp", "hx-lsp", "typos-lsp"]

# ----------- godot4 -------------
[language-server.godot]
command = "nc"
args = ["127.0.0.1", "6005"]

[[language]]
name = "gdscript"
language-servers = ["godot", "hx-lsp", "typos-lsp"]
comment-token = ["#", "##"]

[[grammar]]
name = "gdscript"
source = { git = "https://github.com/PrestonKnopp/tree-sitter-gdscript", rev = "1f1e782fe2600f50ae57b53876505b8282388d77" }


[[language]]
name = "godot-resource"
scope = "source.tscn"
file-types = ["tscn", "tres", "godot", "gdextension", "import"]

[[grammar]]
name = "godot-resource"
source = { git = "https://github.com/PrestonKnopp/tree-sitter-godot-resource", rev = "2ffb90de47417018651fc3b970e5f6b67214dc9d" }


# [language.debugger]
# name ="gdscript"
# https://ask.godotengine.org/122563/how-to-get-the-godot-lsp-to-work-with-nvim-lsp

# ------ emmet support -------------
[language-server.emmet-language-server]
# command="emmet-language-server"
command = "emmet-ls"
args = ["--stdio"]

# ------ tailwindcss-language-server -------

# npm i -g helix-twcss , use hx-tw replace tailwindcss-language-server
[language-server.tailwindcss-ls]
command = "hx-tw"
# command = "tailwindcss-language-server"
args = ["--stdio"]

# -------- typescript -----------
[language-server.typescript-language-server.config]
hostInfo = "helix"
locale = "zh-CN"

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

# --- svelte ---
[[language]]
name = "svelte"
roots = ["package.json"]
language-servers = ["svelteserver", "tailwindcss-ls"]

[[language]]
name = "css"
file-types = ["css", "scss", "less"]
language-servers = [
  "vscode-css-language-server",
  "emmet-language-server",
  "tailwindcss-ls",
]

[[language]]
name = "html"
file-types = ["html", "xhtml"]
language-servers = [
  "vscode-html-language-server",
  "emmet-language-server",
  "tailwindcss-ls",
  "hx-lsp",
  "typos-lsp",
]

[[language]]
name = "vue"
language-servers = ["vuels", "tailwindcss-ls", "hx-lsp", "typos-lsp"]

[[language]]
name = "tsx"
language-servers = [
  "typescript-language-server",
  "tailwindcss-ls",
  "hx-lsp",
  "typos-lsp",
]

[[language]]
name = "jsx"
language-servers = [
  "typescript-language-server",
  "tailwindcss-ls",
  "hx-lsp",
  "typos-lsp",
]

[[grammar]]
name = "jsdoc"
source = { git = "https://github.com/tree-sitter/tree-sitter-jsdoc", rev = "6a6cf9e7341af32d8e2b2e24a37fbfebefc3dc55" }

# [[language]]
# name="javascript"
# auto-format = true

# [language.formatter]
# command = "prettier"
# args = ["--parser=typescript"]


# ----------- php --------------
[language-server.intelephense.config]
licenceKey = "/home/erasin/.config/php/intelephenser_licence.txt"
storagePath = "/home/erasin/.config/php/"                         # os.tmpdir()
globalStoragePath = "/home/erasin/.config/php/"                   # os.homedir()
# clearCache = false # clean state

# ----------- python pyright --------------

# https://github.com/microsoft/pyright
[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
# 禁用 dia, format, 使用 ruff-lsp
except-features = ["diagnostics", "format"]

#  https://github.com/microsoft/pyright/blob/main/docs/configuration.md
#  为 pyright 在 pyproject.toml 中设置 venv 路径适配 rye 等 venv 
# ```toml
#  [tool.pyright]
#  venvPath = "."
#  venv = ".venv"
# ```

[language-server.pylsp.config]
pylsp.plugins.rope_autoimport.enabled = true

# https://github.com/astral-sh/ruff-lsp
[language-server.ruff-lsp]
command = "ruff-lsp"
args = []
# support ruff check
# support ruff format

[language-server.ruff-lsp.config.settings]
args = ["--ignore", "E501"]

[[language]]
name = "python"
file-types = ["py", "pyi"]
roots = ["pyproject.toml", "pyrightconfig.json"]
language-servers = ["pyright", "ruff-lsp", "hx-lsp", "typos-lsp"]
auto-format = true

# ------------ lua --------------

[[language]]
name = "lua"
indent = { tab-width = 4, unit = "    " }

[language-server.lua-language-server]
args = ["--locale", "zh-cn"]

# 建议使用 .luarc.json 配置服务器

# https://luals.github.io/wiki/configuration/
[language-server.lua-language-server.config.Lua.hint]
enable = true
arrayIndex = "Enable"
setType = true
paramName = "All"
paramType = true
await = true

[language-server.lua-language-server.config.Lua.workspace]
library = [
  "${3rd}/love2d/library",
  "${3rd}/busted/library",
  "${3rd}/Defold/library",
]

[language-server.lua-language-server.config.Lua.runtime]
nonstandardSymbol = [
  "+=",
  "-=",
  "*=",
  "/=",
  "//=",
  "%=",
  "<<=",
  ">>=",
  "&=",
  "|=",
  "^=",
]

special = { "import" = "require" }

[[grammar]]
name = "lua"
# source = { git = "https://github.com/MunifTanjim/tree-sitter-lua", rev = "9668709211b2e683f27f414454a8b51bf0a6bda1" }
source = { git = "https://github.com/erasin/tree-sitter-lua", rev = "0158ad30769a3fcf7f40dcaaa94509023ff7fea6" }
# source = { path = "/home/erasin/Development/project/tree-sitter-lua", rev = "" }

# ----------- git ---------------

[[language]]
name = "git-commit"
soft-wrap = { enable = true, wrap-at-text-width = true }

[[language]]
name = "glsl"
file-types = [
  "glsl",
  "vert",
  "tesc",
  "tese",
  "geom",
  "frag",
  "comp",
  "shader",
  "gdshader",
  "gdshaderinc",
]
roots = ['.git']
# language-server = { command = "glslls", args = ["--stdin"] }
# config = { single_file_support = true }


[[language]]
name = "ini"
scope = "source.ini"
file-types = [
  "ini",
  # Systemd unit files
  "service",
  "automount",
  "device",
  "mount",
  "path",
  "service",
  "slice",
  "socket",
  "swap",
  "target",
  "timer",
  # Podman quadlets
  "container",
  "volume",
  "kube",
  "network",
  { glob = ".editorconfig" },
  { glob = "rclone.conf" },
  "properties",
  "cfg",
  "directory",
  "desktop",
]


# --- markdown ----
[[language]]
name = "markdown"
formatter = { command = "prettier", args = ["--parser", "markdown"] }
language-servers = ["marksman", "markdown-oxide", "hx-lsp", "typos-lsp"]
# 设定 zen-mode-like
# text-width = 80
# soft-wrap = { enable = true, wrap-at-text-width = true }

# ---- latex ----
[[language]]
name = "latex"
language-servers = ["texlab"]
text-width = 80
soft-wrap = { enable = true, wrap-at-text-width = true }

# ---- typst ----

[[language]]
name = "typst"
language-servers = ["typst-lsp", "hx-lsp", "typos-lsp"]
formatter = { command = "typst", args = ["c"] }
text-width = 80
soft-wrap = { enable = true, wrap-at-text-width = true }

# --- glicol ----
# https://github.com/TenStrings/glicol-lsp
[language-server.glicol-lsp]
command = "glicol-lsp"

# https://github.com/chaosprint/glicol
[[language]]
name = "glicol"
scope = "source.glicol"
injection-regex = "glicol"
file-types = ["glicol"]
comment-token = "//"
indent = { tab-width = 4, unit = "\t" }
language-servers = ["glicol-lsp"]

[[grammar]]
name = "glicol"
source = { git = "https://github.com/TenStrings/tree-sitter-glicol", rev = "da7b171e87462afa6c74ad772742ec485f821072" }


[[language]]
name = "mail"
scope = "source.eml"
injection-regex = "mail"
file-types = ["eml"]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "mail"
source = { git = "https://github.com/dagle/tree-sitter-mail", rev = "a668550628e9a76bcac4864864dd9d60c91be27f" }

